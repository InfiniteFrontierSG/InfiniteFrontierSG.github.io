{"version":3,"sources":["actions/nCalculatorActions.js","reducers/nCalculatorReducer.js","reducers/index.js","store.js","constants/routes.js","withTracker.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["SET_OTHER_DATA","SET_SUBJECT_DATA","REMOVE_SUBJECT_DATA","SET_STATE","setOtherData","firstTime","cca","age","type","data","setSubjectData","index","moduleData","removeSubjectData","setState","isCalculator","initialState","nCalculator","state","action","newModuleData","splice","combineReducers","nCalculatorReducer","middleware","thunk","composedEnhancers","compose","applyMiddleware","store","createStore","ROUTES","key","link","name","TRACKER_ENABLED","ReactGA","initialize","process","debug","Landing","React","lazy","NotFound","NCalculator","Blog","withRouter","WrappedComponent","options","getPath","location","pathname","search","trackPage","page","set","pageview","HOC","this","props","nextProps","currentPage","nextPage","Component","withTracker","Suspense","fallback","exact","path","component","FBMessenger","App","useState","setFB","useEffect","setTimeout","Boolean","window","hostname","match","WebFont","load","google","families","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3042504.chunk.js","sourcesContent":["export const SET_OTHER_DATA = 'SET_OTHER_DATA';\r\nexport const SET_SUBJECT_DATA = 'SET_SUBJECT_DATA';\r\nexport const REMOVE_SUBJECT_DATA = 'REMOVE_SUBJECT_DATA';\r\nexport const SET_STATE = 'SET_STATE';\r\n\r\nexport const setOtherData = (firstTime, cca, age) => ({\r\n  type: SET_OTHER_DATA,\r\n  data: {\r\n    firstTime,\r\n    cca,\r\n    age,\r\n  },\r\n});\r\n\r\nexport const setSubjectData = (index, moduleData) => ({\r\n  type: SET_SUBJECT_DATA,\r\n  data: {\r\n    index,\r\n    moduleData,\r\n  },\r\n});\r\n\r\nexport const removeSubjectData = index => ({\r\n  type: REMOVE_SUBJECT_DATA,\r\n  data: index,\r\n});\r\n\r\nexport const setState = isCalculator => ({\r\n  type: SET_STATE,\r\n  data: isCalculator,\r\n});\r\n","import {\r\n  SET_OTHER_DATA,\r\n  SET_SUBJECT_DATA,\r\n  REMOVE_SUBJECT_DATA,\r\n  SET_STATE,\r\n} from '../actions/nCalculatorActions';\r\n\r\nconst initialState = {\r\n  firstTime: null,\r\n  cca: null,\r\n  age: null,\r\n  moduleData: [],\r\n  isCalculator: true,\r\n};\r\n\r\nconst nCalculator = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_OTHER_DATA: {\r\n      return {\r\n        ...state,\r\n        firstTime: action.data.firstTime,\r\n        cca: action.data.cca,\r\n        age: action.data.age,\r\n      };\r\n    }\r\n    case SET_SUBJECT_DATA: {\r\n      const newModuleData = [...state.moduleData];\r\n      newModuleData[action.data.index] = action.data.moduleData;\r\n      return {\r\n        ...state,\r\n        moduleData: newModuleData,\r\n      };\r\n    }\r\n    case REMOVE_SUBJECT_DATA: {\r\n      const newModuleData = [...state.moduleData];\r\n      newModuleData.splice(action.data, 1);\r\n      return {\r\n        ...state,\r\n        moduleData: newModuleData,\r\n      };\r\n    }\r\n    case SET_STATE: {\r\n      return {\r\n        ...state,\r\n        isCalculator: action.data,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default nCalculator;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport nCalculatorReducer from './nCalculatorReducer';\r\n\r\nexport default combineReducers({\r\n  nCalculator: nCalculatorReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n// import { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n// import createHistory from 'history/createBrowserHistory';\r\nimport combineReducers from './reducers';\r\n\r\n// export const history = createHistory()\r\n\r\nconst initialState = {};\r\nconst enhancers = [];\r\nconst middleware = [thunk];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__; //eslint-disable-line\r\n  const logger = createLogger({ collapsed: true, duration: true });\r\n\r\n  middleware.push(logger);\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension());\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers,\r\n);\r\n\r\nconst store = createStore(combineReducers, initialState, composedEnhancers);\r\n\r\nexport default store;\r\n","const ROUTES = {\r\n  LANDING: {\r\n    key: 'landing',\r\n    link: '/',\r\n    name: 'Landing',\r\n  },\r\n  NCALCULATOR: {\r\n    key: 'nCalculator',\r\n    link: '/nlevel-calculator',\r\n    name: 'NCalculator',\r\n  },\r\n  BLOG: {\r\n    key: 'blog',\r\n    link: '/blog',\r\n    name: 'Blog',\r\n  },\r\n};\r\n\r\nexport {\r\n  ROUTES,\r\n};\r\n","/**\r\n * From ReactGA Community Wiki Page https://github.com/react-ga/react-ga/wiki/React-Router-v4-withTracker\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\n// import { isProduction } from 'lib/tagFunctions';\r\n\r\nconst ops = {\r\n  debug: process.env.REACT_APP_IS_PRODUCTION === 'false',\r\n};\r\n\r\nconst TRACKER_ENABLED = {\r\n  GA: !!process.env.REACT_APP_GA_TAG,\r\n};\r\n\r\n// if (isProduction) {\r\n  process.env.REACT_APP_GA_TAG && ReactGA.initialize(process.env.REACT_APP_GA_TAG, ops);\r\n// }\r\n// TRACKER_ENABLED.FB_PIXEL && ReactPixel.init(process.env.REACT_APP_FB_PIXEL, {}, ops);\r\n// if (!isProduction) {\r\n// TRACKER_ENABLED.GTM && TagManager.initialize({gtmId: process.env.REACT_APP_GTM});\r\n// }\r\n\r\nexport default (WrappedComponent, options = {}) => {\r\n  const getPath = (location) => {\r\n    const { pathname, search } = location;\r\n    return `${pathname}${search}`;\r\n  }\r\n\r\n  const trackPage = (page) => {\r\n    if (TRACKER_ENABLED.GA) {\r\n      ReactGA.set({ ...options, page });\r\n      ReactGA.pageview(page);\r\n    }\r\n    // if (TRACKER_ENABLED.FB_PIXEL) {\r\n    //   ReactPixel.pageView();\r\n    // }\r\n  };\r\n\r\n  const HOC = class extends Component {\r\n    componentDidMount() {\r\n      trackPage(getPath(this.props.location));\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n      const currentPage = getPath(this.props.location);\r\n      const nextPage = getPath(nextProps.location);\r\n  \r\n      if (currentPage !== nextPage) {\r\n        trackPage(nextPage);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n\r\n  return HOC;\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n} from 'react-router-dom';\r\nimport { ROUTES } from 'constants/routes';\r\nimport withTracker from 'withTracker';\r\n// import {\r\n//   Landing,\r\n//   NotFound,\r\n//   NCalculator,\r\n// } from 'pages';\r\n\r\nconst Landing = React.lazy(() => import('pages/Landing'));\r\nconst NotFound = React.lazy(() => import('pages/NotFound'));\r\nconst NCalculator = React.lazy(() => import('pages/NCalculator'));\r\nconst Blog = React.lazy(() => import('pages/Blog'));\r\n\r\nconst Routes = () => (\r\n  <React.Suspense fallback={<div />}>\r\n    <Switch>\r\n      <Route exact path={ROUTES.LANDING.link} component={Landing} />\r\n      <Route exact path={ROUTES.NCALCULATOR.link} component={NCalculator} />\r\n      <Route exact path={`${ROUTES.BLOG.link}/:blog_page`} component={Blog} />\r\n      <Route exact path={`${ROUTES.BLOG.link}`} component={Blog} />\r\n      <Route path=\"*\" component={NotFound} />\r\n    </Switch>\r\n  </React.Suspense>\r\n);\r\n\r\nexport default withRouter(withTracker(Routes));\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nconst FBMessenger = React.lazy(() => import('components/FBMessenger'));\r\n\r\nconst App = () => {\r\n  const [displayFB, setFB] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setFB(true), 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Suspense fallback={<div />}>\r\n      <BrowserRouter>\r\n        <Routes />\r\n      </BrowserRouter>\r\n      <FBMessenger />\r\n      {/* {displayFB && <FBMessenger />} */}\r\n    </React.Suspense>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport WebFont from 'webfontloader';\r\nimport store from './store';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'styles/styles.global.scss';\r\n\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: [\r\n      'Montserrat:300,300i,400,400i,600,600i,700,700i,800,800i', 'sans-serif',\r\n      'Lato:400', 'sans-serif',\r\n    ],\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}